<!--这段XML是Maven的配置文件，-->
<!--        定义了一个名为`mall-admin`的Spring Boot项目。它继承自`mall-swarm`父项目，-->
<!--        打包为JAR，依赖包括Nacos服务发现与配置、Redis、阿里云OSS、MinIO、OpenFeign等组件，-->
<!--        用于构建微服务架构的后台管理系统。插件部分集成了Spring Boot和Docker构建支持。-->
<!--
    Maven项目对象模型(POM)配置文件，用于定义mall-admin模块的构建信息和依赖管理。
    该模块是mall-swarm微服务架构下的一个子模块，主要负责后台管理功能。
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <!-- POM模型版本，固定为4.0.0 -->
    <modelVersion>4.0.0</modelVersion>

    <!-- 项目所属组织的唯一标识符 -->
    <groupId>com.macro.mall</groupId>

    <!-- 项目的唯一标识符 -->
    <artifactId>mall-admin</artifactId>

    <!-- 项目版本号 -->
    <version>1.0-SNAPSHOT</version>

    <!-- 项目的打包方式，此处为jar包 -->
    <packaging>jar</packaging>

    <!-- 项目名称 -->
    <name>mall-admin</name>

    <!-- 项目描述信息 -->
    <description>mall-admin project for mall</description>

    <!-- 父项目配置，继承mall-swarm父项目的依赖管理和插件配置 -->
    <parent>
        <groupId>com.macro.mall</groupId>
        <artifactId>mall-swarm</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <!-- 项目依赖列表 -->
    <dependencies>
        <!-- 数据库访问层模块依赖 -->
        <dependency>
            <groupId>com.macro.mall</groupId>
            <artifactId>mall-mbg</artifactId>
        </dependency>

        <!-- 阿里巴巴Nacos服务发现组件依赖 -->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>

        <!-- 阿里巴巴Nacos配置中心组件依赖 -->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>

        <!-- Spring Boot Redis数据访问依赖 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>

        <!-- 阿里云OSS对象存储SDK依赖 -->
        <dependency>
            <groupId>com.aliyun.oss</groupId>
            <artifactId>aliyun-sdk-oss</artifactId>
        </dependency>

        <!-- MinIO对象存储客户端依赖 -->
        <dependency>
            <groupId>io.minio</groupId>
            <artifactId>minio</artifactId>
        </dependency>

        <!-- Spring Cloud OpenFeign声明式HTTP客户端依赖 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-openfeign</artifactId>
        </dependency>

        <!-- Feign使用OkHttp作为HTTP客户端的依赖 -->
        <dependency>
            <groupId>io.github.openfeign</groupId>
            <artifactId>feign-okhttp</artifactId>
        </dependency>
    </dependencies>

    <!-- 构建配置 -->
    <build>
        <!-- 插件列表 -->
        <plugins>
            <!-- Spring Boot Maven插件，用于打包可执行jar -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!-- Docker Maven插件，用于构建Docker镜像 -->
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
